[
  {
    "text": "for (let i = 0; i < 0; i++) {\n\n<op0>\n}",
    "vars": 1,
    "ops": 1,
    "about": "Just loop"
  },
  {
    "text": "const <var0> = (<var1>, <var2>) => {\n\nthis.getData(<var1>);\n\n<op0>\n}",
    "vars": 3,
    "ops": 1,
    "about": "Arrow function"
  },
  {
    "text": "<var0>()\n\n.then()\n\n.catch(err => {\n\n<op0>\n\nconsole.log(err);\n});",
    "vars": 1,
    "ops": 1,
    "about": "Sync operations"
  },
  {
    "text": "try {\n\n<op0>\n\n<op1>\n} catch(e) {\n\n<op2>\n\nconsole.log(e);\n}",
    "vars": 0,
    "ops": 3,
    "about": "Try - catch"
  },
  {
    "text": "<var0>.onClick((e) => {\n\nlet <var1> = e.current.target.value;\n\n<op0>\n}",
    "vars": 2,
    "ops": 1,
    "about": "On click"
  },
  {
    "text": "if (<var0>) {\n\n<op0>\n\n<op1>\n}",
    "vars": 1,
    "ops": 2,
    "about": "If"
  },
  {
    "text": "if (<var0>) {\n\n<op0>\n} else {\n\n<op1>\n}",
    "vars": 1,
    "ops": 2,
    "about": "If-else"
  },
  {
    "text": "function <var0>(<var1> = <rn>) {\n\n<op0>\n\n<op1>\n}",
    "vars": 1,
    "ops": 2,
    "about": "If-else"
  }
]